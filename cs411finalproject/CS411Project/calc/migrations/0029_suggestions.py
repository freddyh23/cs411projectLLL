# Generated by Django 2.2.7 on 2019-12-05 03:03

from django.db import migrations, models
from django.db import connection


class Migration(migrations.Migration):

    dependencies = [
        ('calc', '0028_delete_suggestions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('uid', models.CharField(max_length=10)),
                ('suggested', models.CharField(max_length=10)),
            ],
        ),
    ]

def make_trigger(apps,schema_editor):

    with connection.cursor() as cursor:

        cursor.execute("""
            CREATE OR REPLACE FUNCTION run_age_func()
                RETURNS TRIGGER
            AS $$
            DECLARE
                t_row RECORD;
                t_score integer;
                t_id integer;
                t_age integer;
                t_curs CURSOR for select * from calc_person;
 
 
            BEGIN
 
 
                t_score = 0;
 
                t_id = (SELECT MAX(id) FROM calc_Scores);
                IF t_id IS NULL
                    THEN t_id = -1;
                END IF;
 
                t_id = t_id + 1;
 
                OPEN t_curs;
                LOOP
                    FETCH t_curs INTO t_row;
                    EXIT WHEN NOT FOUND;
 
                    IF NEW.gender = t_row.gender
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    IF NEW.heightlowbound <= t_row.height AND NEW.heighthighbound >= t_row.height
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    IF NEW.agelowbound <= t_row.age AND NEW.agehighbound >= t_row.age
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    IF NEW.race = t_row.race
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    IF NEW.schoolname = t_row.schoolname
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    IF NEW.companyname = t_row.companyname
                    THEN
                        t_score = t_score + 1;
                    END IF;
 
                    t_age = (SELECT per.age
                    FROM calc_perference pref JOIN calc_person per ON pref.uid = per.id
                    WHERE per.id = NEW.uid
                    LIMIT 1);
 
                    IF t_age >= 18
                    THEN
                        IF t_row.age < 18
                        THEN
                            t_score = 0;
                        END IF;
                    ELSE
                        IF t_row.age >= 18
                        THEN
                            t_score = 0;
                        END IF;
                    END IF;
 
 
                    IF NEW.uid <> t_row.id
                    THEN
                        WHILE t_id IN (SELECT id FROM calc_scores)
                        LOOP
                            t_id = t_id + 1;
                        END LOOP;
 
                        INSERT INTO calc_scores(id, uid, otherid, score)
                        VALUES(t_id, NEW.uid, t_row.id, t_score);
 
                        t_id = t_id + 1;
                    END IF;
 
 
                END LOOP;
 
                CLOSE t_curs;
                RETURN NEW;
            END;
            $$
            LANGUAGE plpgsql VOLATILE
        """)


        cursor.execute("""
            CREATE TRIGGER ScoreTrigger
            BEFORE INSERT ON calc_perference
            FOR EACH ROW EXECUTE PROCEDURE run_age_func();
        """)
